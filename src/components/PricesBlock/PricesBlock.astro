---
import './pricesBlock.scss';
import {priceData} from '../../assets/priceCards.ts';

import PriceCard from '../PriceCard/PriceCard.astro';


---

<div class="prices">
    <div style="gap: 0px;" class="main_container">
        <h3>Grow confidently with predictable pricing</h3>
        <div class="compare">
            <span class="compare_text">COMPARE</span>
            <button class="compare_button">
                <img src=`/icons/calculator.svg` alt="calculator icon" />
                <span>Calculator</span>
            </button>
        </div>
        <section class="price_cards_wrapper desktop">
            {
                priceData.map(priceCard => {
                    return <PriceCard 
                        title={priceCard.title}
                        info={priceCard.info}
                        price={priceCard.price}
                        options={priceCard.options}
                    />
                })
            }
        </section>
        <div class="price_slider">
            <div class="price_slider_window">
                <section class="price_cards_wrapper">
                    {priceData.map(priceCardData => {
                        return (
                            <PriceCard
                                title={priceCardData.title}
                                info={priceCardData.info}
                                price={priceCardData.price}
                                options={priceCardData.options}
                            />
                        );
                    })}
                </section>
            </div>
        </div>
    </div>
</div>
<script>
import { priceData } from "../../assets/priceCards";

    let startX = 0;
    let diffX = 0;
    let currentSlideIndex = 0;

    const priceSlider: HTMLDivElement | null = document.querySelector('.price_slider');
    const priceWrapper = document.querySelectorAll('.price_cards_wrapper')[1] as HTMLDivElement | null

    if (priceSlider && priceWrapper) {
        priceSlider.addEventListener('touchstart', (event: TouchEvent) => {
            startX = event.touches[0].clientX;
        });

        priceSlider.addEventListener('touchmove', (event: TouchEvent) => {
            diffX = event.touches[0].clientX - startX;
            const translateValue = currentSlideIndex * 350 - diffX

            priceWrapper.style.transform = `translate(${-translateValue}px)`;
        });

        priceSlider.addEventListener('touchend', (event: TouchEvent) => {
            if (diffX <= -100) {
                if (currentSlideIndex < priceData.length - 1) {
                    currentSlideIndex++;
                }

                priceWrapper.style.transform = `translate(${currentSlideIndex * -350}px)`;
            } else if (diffX >= 100) {
                if (currentSlideIndex > 0) {
                    currentSlideIndex--;
                }
                
                priceWrapper.style.transform = `translate(${currentSlideIndex * -350}px)`;
            } else {
                priceWrapper.style.transform = `translate(${currentSlideIndex * -350}px)`;
            }
        })
    }



</script>