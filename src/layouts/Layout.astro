---
import '../scss/layout.scss';

import Header from '../components/Header/Header.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/icons/peer_accent.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>PeerAi</title>
	</head>
	<body>
		<Header />
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		padding: 0;
		width: 100%;
		height: 100%;
		font-size: 10px;
	}
	* {
		box-sizing: border-box;
	}
	:root {
		--bg-main: #ffffff;
		--bg-second: #F9F8F8;
		--accent: #14BD95;
		--text: #343433;
		--text-second: #727272;
		--link: #0072DE;
	}
</style>
<script>
class CalcModalManager {
	modal: HTMLDivElement;
	closeBtn: HTMLButtonElement;
	body: HTMLBodyElement;
	blur: HTMLDivElement;

	constructor() {
		this.modal = document.querySelector('.calculator_window') as HTMLDivElement;
		this.closeBtn = document.querySelector('.calculator_close_btn') as HTMLButtonElement;
		this.body = document.querySelector('body') as HTMLBodyElement;
		this.blur = document.querySelector('.blur') as HTMLDivElement;


		this.init();
	}

	init() {
		document.addEventListener('open-modal', () => {
			this.open();
		})

		if (this.closeBtn) {
			this.closeBtn.addEventListener('click', () => {
				this.close();
			})
		}
	}

	open() {	
		if (this.modal && this.blur) {
			this.modal.classList.remove('disable');
			this.body.style.overflow = 'hidden';
			this.blur.classList.remove('disable_blur');
		}
	}

	close() {
		if (this.modal && this.blur) {
			this.modal.classList.add('disable');
			this.body.style.overflow = 'auto';
			this.blur.classList.add('disable_blur')
		}
	}
}
document.addEventListener('DOMContentLoaded', () => {
	new CalcModalManager();
})

</script>
